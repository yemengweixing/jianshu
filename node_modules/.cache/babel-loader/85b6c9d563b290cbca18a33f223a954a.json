{"ast":null,"code":"import _classCallCheck from \"G:\\\\jianshu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"G:\\\\jianshu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"G:\\\\jianshu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"G:\\\\jianshu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"G:\\\\jianshu\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"G:\\\\jianshu\\\\src\\\\pages\\\\login\\\\index.js\";\nimport React, { PureComponent } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { LoginWrapper, LoginBox, Input, Button, LoginLogo } from './style';\nimport { actionCreators } from './store';\n\nvar Login =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(Login, _PureComponent);\n\n  function Login() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Login)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      account: '',\n      password: ''\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"loginAccount\",\n    value: function loginAccount(event) {\n      this.setState({\n        account: event.target.value\n      });\n    }\n  }, {\n    key: \"loginPassword\",\n    value: function loginPassword(event) {\n      this.setState({\n        password: event.target.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var loginStatus = this.props.loginStatus;\n\n      if (loginStatus) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        });\n      } else {\n        return React.createElement(LoginWrapper, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(LoginLogo, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }), React.createElement(LoginBox, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, React.createElement(Input, {\n          placeholder: \"\\u8D26\\u53F7\",\n          value: this.state.account,\n          onChange: this.loginAccount.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }), React.createElement(Input, {\n          placeholder: \"\\u5BC6\\u7801\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.loginPassword.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }), React.createElement(Button, {\n          onClick: function onClick() {\n            return _this2.props.login(_this2.state.account, _this2.state.password);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"\\u767B\\u9646\")));\n      }\n    }\n  }]);\n\n  return Login;\n}(PureComponent);\n\nvar mapState = function mapState(state) {\n  return {\n    loginStatus: state.getIn(['login', 'login'])\n  };\n};\n\nvar mapDispatch = function mapDispatch(dispatch) {\n  return {\n    login: function login(accountElem, passwordElem) {\n      console.log(accountElem, passwordElem);\n      dispatch(actionCreators.login(accountElem, passwordElem));\n    }\n  };\n};\n\nexport default connect(mapState, mapDispatch)(Login);","map":{"version":3,"sources":["G:\\jianshu\\src\\pages\\login\\index.js"],"names":["React","PureComponent","Redirect","connect","LoginWrapper","LoginBox","Input","Button","LoginLogo","actionCreators","Login","state","account","password","event","setState","target","value","loginStatus","props","loginAccount","bind","loginPassword","login","mapState","getIn","mapDispatch","dispatch","accountElem","passwordElem","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,KAAjC,EAAwCC,MAAxC,EAA+CC,SAA/C,QAA+D,SAA/D;AACA,SAASC,cAAT,QAA+B,SAA/B;;IAEMC,K;;;;;;;;;;;;;;;;;UACLC,K,GAAM;AACLC,MAAAA,OAAO,EAAC,EADH;AAELC,MAAAA,QAAQ,EAAC;AAFJ,K;;;;;;iCAIQC,K,EAAO;AACpB,WAAKC,QAAL,CAAc;AACbH,QAAAA,OAAO,EAAEE,KAAK,CAACE,MAAN,CAAaC;AADT,OAAd;AAGE;;;kCACcH,K,EAAO;AACvB,WAAKC,QAAL,CAAc;AACbF,QAAAA,QAAQ,EAAEC,KAAK,CAACE,MAAN,CAAaC;AADV,OAAd;AAGE;;;6BAEM;AAAA;;AAAA,UACAC,WADA,GACgB,KAAKC,KADrB,CACAD,WADA;;AAER,UAAIA,WAAJ,EAAiB;AAChB,eACC,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,OAJD,MAIM;AACL,eACA,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACC,oBAAC,KAAD;AAAO,UAAA,WAAW,EAAC,cAAnB;AAAwB,UAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,OAA1C;AAAsD,UAAA,QAAQ,EAAE,KAAKQ,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,EAEC,oBAAC,KAAD;AAAO,UAAA,WAAW,EAAC,cAAnB;AAAwB,UAAA,IAAI,EAAC,UAA7B;AAAwC,UAAA,KAAK,EAAE,KAAKV,KAAL,CAAWE,QAA1D;AAAyE,UAAA,QAAQ,EAAE,KAAKS,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD,EAGC,oBAAC,MAAD;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACF,KAAL,CAAWI,KAAX,CAAiB,MAAI,CAACZ,KAAL,CAAWC,OAA5B,EAAqC,MAAI,CAACD,KAAL,CAAWE,QAAhD,CAAN;AAAA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHD,CAFF,CADA;AAUA;AACD;;;;EAlCkBZ,a;;AAqCpB,IAAMuB,QAAQ,GAAG,SAAXA,QAAW,CAACb,KAAD;AAAA,SAAY;AAC5BO,IAAAA,WAAW,EAAEP,KAAK,CAACc,KAAN,CAAY,CAAC,OAAD,EAAU,OAAV,CAAZ;AADe,GAAZ;AAAA,CAAjB;;AAIA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD;AAAA,SAAe;AAClCJ,IAAAA,KADkC,iBAC5BK,WAD4B,EACfC,YADe,EACF;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYH,WAAZ,EAAyBC,YAAzB;AACAF,MAAAA,QAAQ,CAAClB,cAAc,CAACc,KAAf,CAAqBK,WAArB,EAAkCC,YAAlC,CAAD,CAAR;AACA;AAJiC,GAAf;AAAA,CAApB;;AAOA,eAAe1B,OAAO,CAACqB,QAAD,EAAWE,WAAX,CAAP,CAA+BhB,KAA/B,CAAf","sourcesContent":["import React, { PureComponent } from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { LoginWrapper, LoginBox, Input, Button,LoginLogo} from './style'\r\nimport { actionCreators } from './store'\r\n\r\nclass Login extends PureComponent {\r\n\tstate={\r\n\t\taccount:'',\r\n\t\tpassword:''\r\n\t}\r\n\tloginAccount (event) {\r\n\t\tthis.setState({\r\n\t\t\taccount: event.target.value\r\n\t\t})\r\n\t  }\r\n\t  loginPassword (event) {\r\n\t\tthis.setState({\r\n\t\t\tpassword: event.target.value\r\n\t\t})\r\n\t  }  \r\n\r\n\trender() {\r\n\t\tconst { loginStatus } = this.props\r\n\t\tif (loginStatus) {\r\n\t\t\treturn (\r\n\t\t\t\t<Redirect to='/' />\r\n\t\t\t)\r\n\t\t}else {\r\n\t\t\treturn (\r\n\t\t\t<LoginWrapper>\r\n\t\t\t\t<LoginLogo/>\r\n\t\t\t\t\t<LoginBox>\r\n\t\t\t\t\t\t<Input placeholder='账号' value={this.state.account}    onChange={this.loginAccount.bind(this)}    />\r\n\t\t\t\t\t\t<Input placeholder='密码' type='password' value={this.state.password}      onChange={this.loginPassword.bind(this)}                       />\r\n\t\t\t\t\t\t<Button onClick={() => this.props.login(this.state.account, this.state.password)}>登陆</Button>\r\n\t\t\t\t\t</LoginBox>\r\n\t\t\t\t</LoginWrapper>\r\n\t\t\t\t)\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst mapState = (state) => ({\r\n\tloginStatus: state.getIn(['login', 'login'])\r\n})\r\n\r\nconst mapDispatch = (dispatch) => ({\r\n\tlogin(accountElem, passwordElem){\r\n\t\tconsole.log(accountElem, passwordElem)\r\n\t\tdispatch(actionCreators.login(accountElem, passwordElem))\r\n\t}\r\n})\r\n\r\nexport default connect(mapState, mapDispatch)(Login); "]},"metadata":{},"sourceType":"module"}